{"ts":1376757273378,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/* Rijndael (AES) Encryption\n * Copyright 2005 Herbert Hanewinkel, www.haneWIN.de\n * version 1.1, check www.haneWIN.de for the latest version\n\n * This software is provided as-is, without express or implied warranty.  \n * Permission to use, copy, modify, distribute or sell this software, with or\n * without fee, for any purpose and by any individual or organization, is hereby\n * granted, provided that the above copyright notice and this paragraph appear \n * in all copies. Distribution as a part of an application or binary must\n * include the above copyright notice in the documentation and/or other\n * materials provided with the application or distribution.\n */\n\n// The round constants used in subkey expansion\nvar Rcon = [ \n0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, \n0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, \n0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91 ];\n\n// Precomputed lookup table for the SBox\nvar S = [\n 99, 124, 119, 123, 242, 107, 111, 197,  48,   1, 103,  43, 254, 215, 171, \n118, 202, 130, 201, 125, 250,  89,  71, 240, 173, 212, 162, 175, 156, 164, \n114, 192, 183, 253, 147,  38,  54,  63, 247, 204,  52, 165, 229, 241, 113, \n216,  49,  21,   4, 199,  35, 195,  24, 150,   5, 154,   7,  18, 128, 226, \n235,  39, 178, 117,   9, 131,  44,  26,  27, 110,  90, 160,  82,  59, 214, \n179,  41, 227,  47, 132,  83, 209,   0, 237,  32, 252, 177,  91, 106, 203, \n190,  57,  74,  76,  88, 207, 208, 239, 170, 251,  67,  77,  51, 133,  69, \n249,   2, 127,  80,  60, 159, 168,  81, 163,  64, 143, 146, 157,  56, 245, \n188, 182, 218,  33,  16, 255, 243, 210, 205,  12,  19, 236,  95, 151,  68,  \n23,  196, 167, 126,  61, 100,  93,  25, 115,  96, 129,  79, 220,  34,  42, \n144, 136,  70, 238, 184,  20, 222,  94,  11, 219, 224,  50,  58,  10,  73,\n  6,  36,  92, 194, 211, 172,  98, 145, 149, 228, 121, 231, 200,  55, 109, \n141, 213,  78, 169, 108,  86, 244, 234, 101, 122, 174,   8, 186, 120,  37,  \n 46,  28, 166, 180, 198, 232, 221, 116,  31,  75, 189, 139, 138, 112,  62, \n181, 102,  72,   3, 246,  14,  97,  53,  87, 185, 134, 193,  29, 158, 225,\n248, 152,  17, 105, 217, 142, 148, 155,  30, 135, 233, 206,  85,  40, 223,\n140, 161, 137,  13, 191, 230,  66, 104,  65, 153,  45,  15, 176,  84, 187,  \n 22 ];\n\nvar T1 = [\n0xa56363c6, 0x847c7cf8, 0x997777ee, 0x8d7b7bf6,\n0x0df2f2ff, 0xbd6b6bd6, 0xb16f6fde, 0x54c5c591,\n0x50303060, 0x03010102, 0xa96767ce, 0x7d2b2b56,\n0x19fefee7, 0x62d7d7b5, 0xe6abab4d, 0x9a7676ec,\n0x45caca8f, 0x9d82821f, 0x40c9c989, 0x877d7dfa,\n0x15fafaef, 0xeb5959b2, 0xc947478e, 0x0bf0f0fb,\n0xecadad41, 0x67d4d4b3, 0xfda2a25f, 0xeaafaf45,\n0xbf9c9c23, 0xf7a4a453, 0x967272e4, 0x5bc0c09b,\n0xc2b7b775, 0x1cfdfde1, 0xae93933d, 0x6a26264c,\n0x5a36366c, 0x413f3f7e, 0x02f7f7f5, 0x4fcccc83,\n0x5c343468, 0xf4a5a551, 0x34e5e5d1, 0x08f1f1f9,\n0x937171e2, 0x73d8d8ab, 0x53313162, 0x3f15152a,\n0x0c040408, 0x52c7c795, 0x65232346, 0x5ec3c39d,\n0x28181830, 0xa1969637, 0x0f05050a, 0xb59a9a2f,\n0x0907070e, 0x36121224, 0x9b80801b, 0x3de2e2df,\n0x26ebebcd, 0x6927274e, 0xcdb2b27f, 0x9f7575ea,\n0x1b090912, 0x9e83831d, 0x742c2c58, 0x2e1a1a34,\n0x2d1b1b36, 0xb26e6edc, 0xee5a5ab4, 0xfba0a05b,\n0xf65252a4, 0x4d3b3b76, 0x61d6d6b7, 0xceb3b37d,\n0x7b292952, 0x3ee3e3dd, 0x712f2f5e, 0x97848413,\n0xf55353a6, 0x68d1d1b9, 0x00000000, 0x2cededc1,\n0x60202040, 0x1ffcfce3, 0xc8b1b179, 0xed5b5bb6,\n0xbe6a6ad4, 0x46cbcb8d, 0xd9bebe67, 0x4b393972,\n0xde4a4a94, 0xd44c4c98, 0xe85858b0, 0x4acfcf85,\n0x6bd0d0bb, 0x2aefefc5, 0xe5aaaa4f, 0x16fbfbed,\n0xc5434386, 0xd74d4d9a, 0x55333366, 0x94858511,\n0xcf45458a, 0x10f9f9e9, 0x06020204, 0x817f7ffe,\n0xf05050a0, 0x443c3c78, 0xba9f9f25, 0xe3a8a84b,\n0xf35151a2, 0xfea3a35d, 0xc0404080, 0x8a8f8f05,\n0xad92923f, 0xbc9d9d21, 0x48383870, 0x04f5f5f1,\n0xdfbcbc63, 0xc1b6b677, 0x75dadaaf, 0x63212142,\n0x30101020, 0x1affffe5, 0x0ef3f3fd, 0x6dd2d2bf,\n0x4ccdcd81, 0x140c0c18, 0x35131326, 0x2fececc3,\n0xe15f5fbe, 0xa2979735, 0xcc444488, 0x3917172e,\n0x57c4c493, 0xf2a7a755, 0x827e7efc, 0x473d3d7a,\n0xac6464c8, 0xe75d5dba, 0x2b191932, 0x957373e6,\n0xa06060c0, 0x98818119, 0xd14f4f9e, 0x7fdcdca3,\n0x66222244, 0x7e2a2a54, 0xab90903b, 0x8388880b,\n0xca46468c, 0x29eeeec7, 0xd3b8b86b, 0x3c141428,\n0x79dedea7, 0xe25e5ebc, 0x1d0b0b16, 0x76dbdbad,\n0x3be0e0db, 0x56323264, 0x4e3a3a74, 0x1e0a0a14,\n0xdb494992, 0x0a06060c, 0x6c242448, 0xe45c5cb8,\n0x5dc2c29f, 0x6ed3d3bd, 0xefacac43, 0xa66262c4,\n0xa8919139, 0xa4959531, 0x37e4e4d3, 0x8b7979f2,\n0x32e7e7d5, 0x43c8c88b, 0x5937376e, 0xb76d6dda,\n0x8c8d8d01, 0x64d5d5b1, 0xd24e4e9c, 0xe0a9a949,\n0xb46c6cd8, 0xfa5656ac, 0x07f4f4f3, 0x25eaeacf,\n0xaf6565ca, 0x8e7a7af4, 0xe9aeae47, 0x18080810,\n0xd5baba6f, 0x887878f0, 0x6f25254a, 0x722e2e5c,\n0x241c1c38, 0xf1a6a657, 0xc7b4b473, 0x51c6c697,\n0x23e8e8cb, 0x7cdddda1, 0x9c7474e8, 0x211f1f3e,\n0xdd4b4b96, 0xdcbdbd61, 0x868b8b0d, 0x858a8a0f,\n0x907070e0, 0x423e3e7c, 0xc4b5b571, 0xaa6666cc,\n0xd8484890, 0x05030306, 0x01f6f6f7, 0x120e0e1c,\n0xa36161c2, 0x5f35356a, 0xf95757ae, 0xd0b9b969,\n0x91868617, 0x58c1c199, 0x271d1d3a, 0xb99e9e27,\n0x38e1e1d9, 0x13f8f8eb, 0xb398982b, 0x33111122,\n0xbb6969d2, 0x70d9d9a9, 0x898e8e07, 0xa7949433,\n0xb69b9b2d, 0x221e1e3c, 0x92878715, 0x20e9e9c9,\n0x49cece87, 0xff5555aa, 0x78282850, 0x7adfdfa5,\n0x8f8c8c03, 0xf8a1a159, 0x80898909, 0x170d0d1a,\n0xdabfbf65, 0x31e6e6d7, 0xc6424284, 0xb86868d0,\n0xc3414182, 0xb0999929, 0x772d2d5a, 0x110f0f1e,\n0xcbb0b07b, 0xfc5454a8, 0xd6bbbb6d, 0x3a16162c ];\n\nvar T2 = [\n0x6363c6a5, 0x7c7cf884, 0x7777ee99, 0x7b7bf68d,\n0xf2f2ff0d, 0x6b6bd6bd, 0x6f6fdeb1, 0xc5c59154,\n0x30306050, 0x01010203, 0x6767cea9, 0x2b2b567d,\n0xfefee719, 0xd7d7b562, 0xabab4de6, 0x7676ec9a,\n0xcaca8f45, 0x82821f9d, 0xc9c98940, 0x7d7dfa87,\n0xfafaef15, 0x5959b2eb, 0x47478ec9, 0xf0f0fb0b,\n0xadad41ec, 0xd4d4b367, 0xa2a25ffd, 0xafaf45ea,\n0x9c9c23bf, 0xa4a453f7, 0x7272e496, 0xc0c09b5b,\n0xb7b775c2, 0xfdfde11c, 0x93933dae, 0x26264c6a,\n0x36366c5a, 0x3f3f7e41, 0xf7f7f502, 0xcccc834f,\n0x3434685c, 0xa5a551f4, 0xe5e5d134, 0xf1f1f908,\n0x7171e293, 0xd8d8ab73, 0x31316253, 0x15152a3f,\n0x0404080c, 0xc7c79552, 0x23234665, 0xc3c39d5e,\n0x18183028, 0x969637a1, 0x05050a0f, 0x9a9a2fb5,\n0x07070e09, 0x12122436, 0x80801b9b, 0xe2e2df3d,\n0xebebcd26, 0x27274e69, 0xb2b27fcd, 0x7575ea9f,\n0x0909121b, 0x83831d9e, 0x2c2c5874, 0x1a1a342e,\n0x1b1b362d, 0x6e6edcb2, 0x5a5ab4ee, 0xa0a05bfb,\n0x5252a4f6, 0x3b3b764d, 0xd6d6b761, 0xb3b37dce,\n0x2929527b, 0xe3e3dd3e, 0x2f2f5e71, 0x84841397,\n0x5353a6f5, 0xd1d1b968, 0x00000000, 0xededc12c,\n0x20204060, 0xfcfce31f, 0xb1b179c8, 0x5b5bb6ed,\n0x6a6ad4be, 0xcbcb8d46, 0xbebe67d9, 0x3939724b,\n0x4a4a94de, 0x4c4c98d4, 0x5858b0e8, 0xcfcf854a,\n0xd0d0bb6b, 0xefefc52a, 0xaaaa4fe5, 0xfbfbed16,\n0x434386c5, 0x4d4d9ad7, 0x33336655, 0x85851194,\n0x45458acf, 0xf9f9e910, 0x02020406, 0x7f7ffe81,\n0x5050a0f0, 0x3c3c7844, 0x9f9f25ba, 0xa8a84be3,\n0x5151a2f3, 0xa3a35dfe, 0x404080c0, 0x8f8f058a,\n0x92923fad, 0x9d9d21bc, 0x38387048, 0xf5f5f104,\n0xbcbc63df, 0xb6b677c1, 0xdadaaf75, 0x21214263,\n0x10102030, 0xffffe51a, 0xf3f3fd0e, 0xd2d2bf6d,\n0xcdcd814c, 0x0c0c1814, 0x13132635, 0xececc32f,\n0x5f5fbee1, 0x979735a2, 0x444488cc, 0x17172e39,\n0xc4c49357, 0xa7a755f2, 0x7e7efc82, 0x3d3d7a47,\n0x6464c8ac, 0x5d5dbae7, 0x1919322b, 0x7373e695,\n0x6060c0a0, 0x81811998, 0x4f4f9ed1, 0xdcdca37f,\n0x22224466, 0x2a2a547e, 0x90903bab, 0x88880b83,\n0x46468cca, 0xeeeec729, 0xb8b86bd3, 0x1414283c,\n0xdedea779, 0x5e5ebce2, 0x0b0b161d, 0xdbdbad76,\n0xe0e0db3b, 0x32326456, 0x3a3a744e, 0x0a0a141e,\n0x494992db, 0x06060c0a, 0x2424486c, 0x5c5cb8e4,\n0xc2c29f5d, 0xd3d3bd6e, 0xacac43ef, 0x6262c4a6,\n0x919139a8, 0x959531a4, 0xe4e4d337, 0x7979f28b,\n0xe7e7d532, 0xc8c88b43, 0x37376e59, 0x6d6ddab7,\n0x8d8d018c, 0xd5d5b164, 0x4e4e9cd2, 0xa9a949e0,\n0x6c6cd8b4, 0x5656acfa, 0xf4f4f307, 0xeaeacf25,\n0x6565caaf, 0x7a7af48e, 0xaeae47e9, 0x08081018,\n0xbaba6fd5, 0x7878f088, 0x25254a6f, 0x2e2e5c72,\n0x1c1c3824, 0xa6a657f1, 0xb4b473c7, 0xc6c69751,\n0xe8e8cb23, 0xdddda17c, 0x7474e89c, 0x1f1f3e21,\n0x4b4b96dd, 0xbdbd61dc, 0x8b8b0d86, 0x8a8a0f85,\n0x7070e090, 0x3e3e7c42, 0xb5b571c4, 0x6666ccaa,\n0x484890d8, 0x03030605, 0xf6f6f701, 0x0e0e1c12,\n0x6161c2a3, 0x35356a5f, 0x5757aef9, 0xb9b969d0,\n0x86861791, 0xc1c19958, 0x1d1d3a27, 0x9e9e27b9,\n0xe1e1d938, 0xf8f8eb13, 0x98982bb3, 0x11112233,\n0x6969d2bb, 0xd9d9a970, 0x8e8e0789, 0x949433a7,\n0x9b9b2db6, 0x1e1e3c22, 0x87871592, 0xe9e9c920,\n0xcece8749, 0x5555aaff, 0x28285078, 0xdfdfa57a,\n0x8c8c038f, 0xa1a159f8, 0x89890980, 0x0d0d1a17,\n0xbfbf65da, 0xe6e6d731, 0x424284c6, 0x6868d0b8,\n0x414182c3, 0x999929b0, 0x2d2d5a77, 0x0f0f1e11,\n0xb0b07bcb, 0x5454a8fc, 0xbbbb6dd6, 0x16162c3a ];\n\nvar T3 = [\n0x63c6a563, 0x7cf8847c, 0x77ee9977, 0x7bf68d7b,\n0xf2ff0df2, 0x6bd6bd6b, 0x6fdeb16f, 0xc59154c5,\n0x30605030, 0x01020301, 0x67cea967, 0x2b567d2b,\n0xfee719fe, 0xd7b562d7, 0xab4de6ab, 0x76ec9a76,\n0xca8f45ca, 0x821f9d82, 0xc98940c9, 0x7dfa877d,\n0xfaef15fa, 0x59b2eb59, 0x478ec947, 0xf0fb0bf0,\n0xad41ecad, 0xd4b367d4, 0xa25ffda2, 0xaf45eaaf,\n0x9c23bf9c, 0xa453f7a4, 0x72e49672, 0xc09b5bc0,\n0xb775c2b7, 0xfde11cfd, 0x933dae93, 0x264c6a26,\n0x366c5a36, 0x3f7e413f, 0xf7f502f7, 0xcc834fcc,\n0x34685c34, 0xa551f4a5, 0xe5d134e5, 0xf1f908f1,\n0x71e29371, 0xd8ab73d8, 0x31625331, 0x152a3f15,\n0x04080c04, 0xc79552c7, 0x23466523, 0xc39d5ec3,\n0x18302818, 0x9637a196, 0x050a0f05, 0x9a2fb59a,\n0x070e0907, 0x12243612, 0x801b9b80, 0xe2df3de2,\n0xebcd26eb, 0x274e6927, 0xb27fcdb2, 0x75ea9f75,\n0x09121b09, 0x831d9e83, 0x2c58742c, 0x1a342e1a,\n0x1b362d1b, 0x6edcb26e, 0x5ab4ee5a, 0xa05bfba0,\n0x52a4f652, 0x3b764d3b, 0xd6b761d6, 0xb37dceb3,\n0x29527b29, 0xe3dd3ee3, 0x2f5e712f, 0x84139784,\n0x53a6f553, 0xd1b968d1, 0x00000000, 0xedc12ced,\n0x20406020, 0xfce31ffc, 0xb179c8b1, 0x5bb6ed5b,\n0x6ad4be6a, 0xcb8d46cb, 0xbe67d9be, 0x39724b39,\n0x4a94de4a, 0x4c98d44c, 0x58b0e858, 0xcf854acf,\n0xd0bb6bd0, 0xefc52aef, 0xaa4fe5aa, 0xfbed16fb,\n0x4386c543, 0x4d9ad74d, 0x33665533, 0x85119485,\n0x458acf45, 0xf9e910f9, 0x02040602, 0x7ffe817f,\n0x50a0f050, 0x3c78443c, 0x9f25ba9f, 0xa84be3a8,\n0x51a2f351, 0xa35dfea3, 0x4080c040, 0x8f058a8f,\n0x923fad92, 0x9d21bc9d, 0x38704838, 0xf5f104f5,\n0xbc63dfbc, 0xb677c1b6, 0xdaaf75da, 0x21426321,\n0x10203010, 0xffe51aff, 0xf3fd0ef3, 0xd2bf6dd2,\n0xcd814ccd, 0x0c18140c, 0x13263513, 0xecc32fec,\n0x5fbee15f, 0x9735a297, 0x4488cc44, 0x172e3917,\n0xc49357c4, 0xa755f2a7, 0x7efc827e, 0x3d7a473d,\n0x64c8ac64, 0x5dbae75d, 0x19322b19, 0x73e69573,\n0x60c0a060, 0x81199881, 0x4f9ed14f, 0xdca37fdc,\n0x22446622, 0x2a547e2a, 0x903bab90, 0x880b8388,\n0x468cca46, 0xeec729ee, 0xb86bd3b8, 0x14283c14,\n0xdea779de, 0x5ebce25e, 0x0b161d0b, 0xdbad76db,\n0xe0db3be0, 0x32645632, 0x3a744e3a, 0x0a141e0a,\n0x4992db49, 0x060c0a06, 0x24486c24, 0x5cb8e45c,\n0xc29f5dc2, 0xd3bd6ed3, 0xac43efac, 0x62c4a662,\n0x9139a891, 0x9531a495, 0xe4d337e4, 0x79f28b79,\n0xe7d532e7, 0xc88b43c8, 0x376e5937, 0x6ddab76d,\n0x8d018c8d, 0xd5b164d5, 0x4e9cd24e, 0xa949e0a9,\n0x6cd8b46c, 0x56acfa56, 0xf4f307f4, 0xeacf25ea,\n0x65caaf65, 0x7af48e7a, 0xae47e9ae, 0x08101808,\n0xba6fd5ba, 0x78f08878, 0x254a6f25, 0x2e5c722e,\n0x1c38241c, 0xa657f1a6, 0xb473c7b4, 0xc69751c6,\n0xe8cb23e8, 0xdda17cdd, 0x74e89c74, 0x1f3e211f,\n0x4b96dd4b, 0xbd61dcbd, 0x8b0d868b, 0x8a0f858a,\n0x70e09070, 0x3e7c423e, 0xb571c4b5, 0x66ccaa66,\n0x4890d848, 0x03060503, 0xf6f701f6, 0x0e1c120e,\n0x61c2a361, 0x356a5f35, 0x57aef957, 0xb969d0b9,\n0x86179186, 0xc19958c1, 0x1d3a271d, 0x9e27b99e,\n0xe1d938e1, 0xf8eb13f8, 0x982bb398, 0x11223311,\n0x69d2bb69, 0xd9a970d9, 0x8e07898e, 0x9433a794,\n0x9b2db69b, 0x1e3c221e, 0x87159287, 0xe9c920e9,\n0xce8749ce, 0x55aaff55, 0x28507828, 0xdfa57adf,\n0x8c038f8c, 0xa159f8a1, 0x89098089, 0x0d1a170d,\n0xbf65dabf, 0xe6d731e6, 0x4284c642, 0x68d0b868,\n0x4182c341, 0x9929b099, 0x2d5a772d, 0x0f1e110f,\n0xb07bcbb0, 0x54a8fc54, 0xbb6dd6bb, 0x162c3a16 ];\n\nvar T4 = [\n0xc6a56363, 0xf8847c7c, 0xee997777, 0xf68d7b7b,\n0xff0df2f2, 0xd6bd6b6b, 0xdeb16f6f, 0x9154c5c5,\n0x60503030, 0x02030101, 0xcea96767, 0x567d2b2b,\n0xe719fefe, 0xb562d7d7, 0x4de6abab, 0xec9a7676,\n0x8f45caca, 0x1f9d8282, 0x8940c9c9, 0xfa877d7d,\n0xef15fafa, 0xb2eb5959, 0x8ec94747, 0xfb0bf0f0,\n0x41ecadad, 0xb367d4d4, 0x5ffda2a2, 0x45eaafaf,\n0x23bf9c9c, 0x53f7a4a4, 0xe4967272, 0x9b5bc0c0,\n0x75c2b7b7, 0xe11cfdfd, 0x3dae9393, 0x4c6a2626,\n0x6c5a3636, 0x7e413f3f, 0xf502f7f7, 0x834fcccc,\n0x685c3434, 0x51f4a5a5, 0xd134e5e5, 0xf908f1f1,\n0xe2937171, 0xab73d8d8, 0x62533131, 0x2a3f1515,\n0x080c0404, 0x9552c7c7, 0x46652323, 0x9d5ec3c3,\n0x30281818, 0x37a19696, 0x0a0f0505, 0x2fb59a9a,\n0x0e090707, 0x24361212, 0x1b9b8080, 0xdf3de2e2,\n0xcd26ebeb, 0x4e692727, 0x7fcdb2b2, 0xea9f7575,\n0x121b0909, 0x1d9e8383, 0x58742c2c, 0x342e1a1a,\n0x362d1b1b, 0xdcb26e6e, 0xb4ee5a5a, 0x5bfba0a0,\n0xa4f65252, 0x764d3b3b, 0xb761d6d6, 0x7dceb3b3,\n0x527b2929, 0xdd3ee3e3, 0x5e712f2f, 0x13978484,\n0xa6f55353, 0xb968d1d1, 0x00000000, 0xc12ceded,\n0x40602020, 0xe31ffcfc, 0x79c8b1b1, 0xb6ed5b5b,\n0xd4be6a6a, 0x8d46cbcb, 0x67d9bebe, 0x724b3939,\n0x94de4a4a, 0x98d44c4c, 0xb0e85858, 0x854acfcf,\n0xbb6bd0d0, 0xc52aefef, 0x4fe5aaaa, 0xed16fbfb,\n0x86c54343, 0x9ad74d4d, 0x66553333, 0x11948585,\n0x8acf4545, 0xe910f9f9, 0x04060202, 0xfe817f7f,\n0xa0f05050, 0x78443c3c, 0x25ba9f9f, 0x4be3a8a8,\n0xa2f35151, 0x5dfea3a3, 0x80c04040, 0x058a8f8f,\n0x3fad9292, 0x21bc9d9d, 0x70483838, 0xf104f5f5,\n0x63dfbcbc, 0x77c1b6b6, 0xaf75dada, 0x42632121,\n0x20301010, 0xe51affff, 0xfd0ef3f3, 0xbf6dd2d2,\n0x814ccdcd, 0x18140c0c, 0x26351313, 0xc32fecec,\n0xbee15f5f, 0x35a29797, 0x88cc4444, 0x2e391717,\n0x9357c4c4, 0x55f2a7a7, 0xfc827e7e, 0x7a473d3d,\n0xc8ac6464, 0xbae75d5d, 0x322b1919, 0xe6957373,\n0xc0a06060, 0x19988181, 0x9ed14f4f, 0xa37fdcdc,\n0x44662222, 0x547e2a2a, 0x3bab9090, 0x0b838888,\n0x8cca4646, 0xc729eeee, 0x6bd3b8b8, 0x283c1414,\n0xa779dede, 0xbce25e5e, 0x161d0b0b, 0xad76dbdb,\n0xdb3be0e0, 0x64563232, 0x744e3a3a, 0x141e0a0a,\n0x92db4949, 0x0c0a0606, 0x486c2424, 0xb8e45c5c,\n0x9f5dc2c2, 0xbd6ed3d3, 0x43efacac, 0xc4a66262,\n0x39a89191, 0x31a49595, 0xd337e4e4, 0xf28b7979,\n0xd532e7e7, 0x8b43c8c8, 0x6e593737, 0xdab76d6d,\n0x018c8d8d, 0xb164d5d5, 0x9cd24e4e, 0x49e0a9a9,\n0xd8b46c6c, 0xacfa5656, 0xf307f4f4, 0xcf25eaea,\n0xcaaf6565, 0xf48e7a7a, 0x47e9aeae, 0x10180808,\n0x6fd5baba, 0xf0887878, 0x4a6f2525, 0x5c722e2e,\n0x38241c1c, 0x57f1a6a6, 0x73c7b4b4, 0x9751c6c6,\n0xcb23e8e8, 0xa17cdddd, 0xe89c7474, 0x3e211f1f,\n0x96dd4b4b, 0x61dcbdbd, 0x0d868b8b, 0x0f858a8a,\n0xe0907070, 0x7c423e3e, 0x71c4b5b5, 0xccaa6666,\n0x90d84848, 0x06050303, 0xf701f6f6, 0x1c120e0e,\n0xc2a36161, 0x6a5f3535, 0xaef95757, 0x69d0b9b9,\n0x17918686, 0x9958c1c1, 0x3a271d1d, 0x27b99e9e,\n0xd938e1e1, 0xeb13f8f8, 0x2bb39898, 0x22331111,\n0xd2bb6969, 0xa970d9d9, 0x07898e8e, 0x33a79494,\n0x2db69b9b, 0x3c221e1e, 0x15928787, 0xc920e9e9,\n0x8749cece, 0xaaff5555, 0x50782828, 0xa57adfdf,\n0x038f8c8c, 0x59f8a1a1, 0x09808989, 0x1a170d0d,\n0x65dabfbf, 0xd731e6e6, 0x84c64242, 0xd0b86868,\n0x82c34141, 0x29b09999, 0x5a772d2d, 0x1e110f0f,\n0x7bcbb0b0, 0xa8fc5454, 0x6dd6bbbb, 0x2c3a1616 ];\n\nfunction B0(x) { return (x&255); }\nfunction B1(x) { return ((x>>8)&255); }\nfunction B2(x) { return ((x>>16)&255); }\nfunction B3(x) { return ((x>>24)&255); }\n\nfunction F1(x0, x1, x2, x3)\n{\n  return B1(T1[x0&255]) | (B1(T1[(x1>>8)&255])<<8)\n      | (B1(T1[(x2>>16)&255])<<16) | (B1(T1[x3>>>24])<<24);\n}\n\nfunction packBytes(octets)\n{\n  var i, j;\n  var len=octets.length;\n  var b=new Array(len/4);\n\n  if (!octets || len % 4) return;\n\n  for (i=0, j=0; j<len; j+= 4)\n     b[i++] = octets[j] | (octets[j+1]<<8) | (octets[j+2]<<16) | (octets[j+3]<<24);\n\n  return b;  \n}\n\nfunction unpackBytes(packed)\n{\n  var j;\n  var i=0, l = packed.length;\n  var r = new Array(l*4);\n\n  for (j=0; j<l; j++)\n  {\n    r[i++] = B0(packed[j]);\n    r[i++] = B1(packed[j]);\n    r[i++] = B2(packed[j]);\n    r[i++] = B3(packed[j]);\n  }\n  return r;\n}\n\n// ------------------------------------------------\n\nvar maxkc=8;\nvar maxrk=14;\n\nfunction keyExpansion(key)\n{\n  var kc, i, j, r, t;\n  var rounds;\n  var keySched=new Array(maxrk+1);\n  var keylen=key.length;\n  var k=new Array(maxkc);\n  var tk=new Array(maxkc);\n  var rconpointer=0;\n\n  if(keylen==16)\n  {\n   rounds=10;\n   kc=4;\n  }\n  else if(keylen==24)\n  {\n   rounds=12;\n   kc=6\n  }\n  else if(keylen==32)\n  {\n   rounds=14;\n   kc=8\n  }\n  else\n  {\n   alert('Invalid AES key length '+keylen);\n   return;\n  }\n\n  for(i=0; i<maxrk+1; i++) keySched[i]=new Array(4);\n\n  for(i=0,j=0; j<keylen; j++,i+=4)\n    k[j] = key.charCodeAt(i) | (key.charCodeAt(i+1)<<8)\n                     | (key.charCodeAt(i+2)<<16) | (key.charCodeAt(i+3)<<24);\n\n  for(j=kc-1; j>=0; j--) tk[j] = k[j];\n\n  r=0;\n  t=0;\n  for(j=0; (j<kc)&&(r<rounds+1); )\n  {\n    for(; (j<kc)&&(t<4); j++,t++)\n    {\n      keySched[r][t]=tk[j];\n    }\n    if(t==4)\n    {\n      r++;\n      t=0;\n    }\n  }\n\n  while(r<rounds+1)\n  {\n    var temp = tk[kc-1];\n\n    tk[0] ^= S[B1(temp)] | (S[B2(temp)]<<8) | (S[B3(temp)]<<16) | (S[B0(temp)]<<24);\n    tk[0] ^= Rcon[rconpointer++];\n\n    if(kc != 8)\n    {\n      for(j=1; j<kc; j++) tk[j] ^= tk[j-1];\n    }\n    else\n    {\n      for(j=1; j<kc/2; j++) tk[j] ^= tk[j-1];\n \n      temp = tk[kc/2-1];\n      tk[kc/2] ^= S[B0(temp)] | (S[B1(temp)]<<8) | (S[B2(temp)]<<16) | (S[B3(temp)]<<24);\n\n      for(j=kc/2+1; j<kc; j++) tk[j] ^= tk[j-1];\n    }\n\n    for(j=0; (j<kc)&&(r<rounds+1); )\n    {\n      for(; (j<kc)&&(t<4); j++,t++)\n      {\n        keySched[r][t]=tk[j];\n      }\n      if(t==4)\n      {\n        r++;\n        t=0;\n      }\n    }\n  }\n  this.rounds = rounds;\n  this.rk = keySched;\n  return this;\n}\n\nfunction AESencrypt(block, ctx)\n{\n  var r;\n  var t0,t1,t2,t3;\n\n  var b = packBytes(block);\n  var rounds = ctx.rounds;\n  var b0 = b[0];\n  var b1 = b[1];\n  var b2 = b[2];\n  var b3 = b[3];\n\n  for(r=0; r<rounds-1; r++)\n  {\n    t0 = b0 ^ ctx.rk[r][0];\n    t1 = b1 ^ ctx.rk[r][1];\n    t2 = b2 ^ ctx.rk[r][2];\n    t3 = b3 ^ ctx.rk[r][3];\n\n    b0 = T1[t0&255] ^ T2[(t1>>8)&255] ^ T3[(t2>>16)&255] ^ T4[t3>>>24];\n    b1 = T1[t1&255] ^ T2[(t2>>8)&255] ^ T3[(t3>>16)&255] ^ T4[t0>>>24];\n    b2 = T1[t2&255] ^ T2[(t3>>8)&255] ^ T3[(t0>>16)&255] ^ T4[t1>>>24];\n    b3 = T1[t3&255] ^ T2[(t0>>8)&255] ^ T3[(t1>>16)&255] ^ T4[t2>>>24];\n  }\n\n  // last round is special\n  r = rounds-1;\n\n  t0 = b0 ^ ctx.rk[r][0];\n  t1 = b1 ^ ctx.rk[r][1];\n  t2 = b2 ^ ctx.rk[r][2];\n  t3 = b3 ^ ctx.rk[r][3];\n\n  b[0] = F1(t0, t1, t2, t3) ^ ctx.rk[rounds][0];\n  b[1] = F1(t1, t2, t3, t0) ^ ctx.rk[rounds][1];\n  b[2] = F1(t2, t3, t0, t1) ^ ctx.rk[rounds][2];\n  b[3] = F1(t3, t0, t1, t2) ^ ctx.rk[rounds][3];\n\n  return unpackBytes(b);\n}\n\n"]],"start1":0,"start2":0,"length1":0,"length2":18107}]],"length":18107}
